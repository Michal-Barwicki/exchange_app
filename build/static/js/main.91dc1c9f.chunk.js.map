{"version":3,"sources":["components/JoinIn.js","components/LogIn.js","pages/LogInPage.js","components/Navigation.js","components/CurrenciesItem.js","components/Currencies.js","components/WalletItem.js","components/Wallet.js","pages/MainPage.js","components/Popup.js","App.js","serviceWorker.js","index.js"],"names":["JoinIn","state","username","email","pass","confirm_pass","accept","message","PLN","USD","EUR","CHF","RUB","CZK","GBP","errors","messages","username_incorrect","email_incorrect","pass_incorrect","confirm_pass_incorrect","accept_incorrect","handleChange","e","name","target","type","value","setState","checked","replace","handleSubmit","preventDefault","validation","formValidation","correct","data","password","options","method","headers","Accept","body","JSON","stringify","fetch","then","response","confirm_password","length","indexOf","this","setTimeout","className","onSubmit","noValidate","htmlFor","id","onChange","min","step","Component","LogIn","onClick","props","changePermission","LogInPage","Navigation","userData","logOut","CurrenciesItem","item","code","unit","sellPrice","exchangeAction","Currencies","items","currenciesList","map","key","WalletItem","amount","purchasePrice","toFixed","Wallet","index","MainPage","currenciesData","Object","keys","Popup","userAction","Math","abs","floor","action","exchange","closePopup","App","permission","popupVisible","a","json","prevState","Number","alert","setInterval","getCurrencies","console","log","path","exact","render","to","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91dc1c9f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass JoinIn extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    pass: \"\",\r\n    confirm_pass: \"\",\r\n    accept: false,\r\n    message: \"\",\r\n    PLN: 0,\r\n    USD: 0,\r\n    EUR: 0,\r\n    CHF: 0,\r\n    RUB: 0,\r\n    CZK: 0,\r\n    GBP: 0,\r\n\r\n    errors: {\r\n      username: false,\r\n      email: false,\r\n      pass: false,\r\n      confirm_pass: false,\r\n      accept: false\r\n    }\r\n  };\r\n\r\n  messages = {\r\n    username_incorrect:\r\n      \"Name should not contain spaces and should contain at least 3 characters.\",\r\n    email_incorrect: \"Wrong email address.\",\r\n    pass_incorrect: \"Password should contain at least 8 characters.\",\r\n    confirm_pass_incorrect: \"Passwords are not the same.\",\r\n    accept_incorrect: \"Terms are not confirmed.\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const name = e.target.name;\r\n    const type = e.target.type;\r\n    if (type === \"text\" || type === \"password\" || type === \"email\") {\r\n      const value = e.target.value;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    } else if (type === \"checkbox\") {\r\n      const checked = e.target.checked;\r\n      this.setState({\r\n        [name]: checked\r\n      });\r\n    } else if (type === \"number\") {\r\n      const value = e.target.value.replace(/\\D/, \"\");\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const validation = this.formValidation();\r\n\r\n    if (validation.correct) {\r\n      const data = {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.pass,\r\n        PLN: this.state.PLN,\r\n        USD: this.state.USD,\r\n        EUR: this.state.EUR,\r\n        CHF: this.state.CHF,\r\n        RUB: this.state.RUB,\r\n        CZK: this.state.CZK,\r\n        GBP: this.state.GBP\r\n      };\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      };\r\n      fetch(\"/api\", options).then(response => {});\r\n\r\n      this.setState({\r\n        username: \"\",\r\n        email: \"\",\r\n        pass: \"\",\r\n        confirm_pass: \"\",\r\n        accept: false,\r\n        PLN: 0,\r\n        USD: 0,\r\n        EUR: 0,\r\n        CHF: 0,\r\n        RUB: 0,\r\n        CZK: 0,\r\n        GBP: 0,\r\n\r\n        message: \"A form has been sent\",\r\n\r\n        errors: {\r\n          username: false,\r\n          email: false,\r\n          pass: false,\r\n          confirm_pass: false,\r\n          accept: false\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errors: {\r\n          username: !validation.username,\r\n          email: !validation.email,\r\n          pass: !validation.password,\r\n          accept: !validation.accept\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  formValidation = () => {\r\n    let username = false;\r\n    let email = false;\r\n    let password = false;\r\n    let confirm_password = false;\r\n    let accept = false;\r\n    let correct = false;\r\n\r\n    if (\r\n      this.state.username.length >= 3 &&\r\n      this.state.username.indexOf(\" \") === -1\r\n    ) {\r\n      username = true;\r\n    }\r\n    if (this.state.email.indexOf(\"@\") !== -1) {\r\n      email = true;\r\n    }\r\n    if (this.state.pass.length >= 8) {\r\n      password = true;\r\n    }\r\n    if (this.state.confirm_pass === this.state.pass) {\r\n      confirm_password = true;\r\n    }\r\n    if (this.state.accept) {\r\n      accept = true;\r\n    }\r\n    if (username && email && password && confirm_password && accept) {\r\n      correct = true;\r\n    }\r\n    return {\r\n      username,\r\n      email,\r\n      password,\r\n      confirm_password,\r\n      accept,\r\n      correct\r\n    };\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.message !== \"\") {\r\n      setTimeout(\r\n        () =>\r\n          this.setState({\r\n            message: \"\"\r\n          }),\r\n        2000\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"JoinIn\">\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"user\">\r\n              <span>Name:</span>\r\n              <input\r\n                type=\"text\"\r\n                id=\"user\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errors.username && (\r\n                <div className=\"message\">\r\n                  {\" \"}\r\n                  {this.messages.username_incorrect}{\" \"}\r\n                </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"email\">\r\n              <span>Email:</span>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errors.email && (\r\n                <div className=\"message\"> {this.messages.email_incorrect} </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"password\">\r\n              <span>Password: </span>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"pass\"\r\n                value={this.state.pass}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errors.pass && (\r\n                <div className=\"message\"> {this.messages.pass_incorrect} </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"confirm_password\">\r\n              <span>Confirm:</span>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirm_password\"\r\n                name=\"confirm_pass\"\r\n                value={this.state.confirm_pass}\r\n                onChange={this.handleChange}\r\n              />\r\n              {this.state.errors.confirm_pass && (\r\n                <div className=\"message\">\r\n                  {this.messages.confirm_pass_incorrect}\r\n                </div>\r\n              )}\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"accept\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"accept\"\r\n                name=\"accept\"\r\n                checked={this.state.accept}\r\n                onChange={this.handleChange}\r\n              />\r\n              <span className=\"terms\">\r\n                I confirm I have read and agree to the terms and conditions.\r\n              </span>\r\n              {this.state.errors.accept && (\r\n                <div className=\"message\">{this.messages.accept_incorrect}</div>\r\n              )}\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"PLN\">\r\n              <span>PLN:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"PLN\"\r\n                name=\"PLN\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                value={this.state.PLN}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"USD\">\r\n              <span>USD:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"USD\"\r\n                name=\"USD\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                value={this.state.USD}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"EUR\">\r\n              <span>EUR:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"EUR\"\r\n                name=\"EUR\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                value={this.state.EUR}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"CHF\">\r\n              <span>CHF:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"CHF\"\r\n                name=\"CHF\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                value={this.state.CHF}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"RUB\">\r\n              <span>RUB:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"RUB\"\r\n                name=\"RUB\"\r\n                min=\"0\"\r\n                step=\"100\"\r\n                value={this.state.RUB}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"CZK\">\r\n              <span>CZK:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"CZK\"\r\n                name=\"CZK\"\r\n                min=\"0\"\r\n                step=\"100\"\r\n                value={this.state.CZK}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"GBP\">\r\n              <span>GBP:</span>\r\n              <input\r\n                type=\"number\"\r\n                id=\"GBP\"\r\n                name=\"GBP\"\r\n                min=\"0\"\r\n                step=\"1\"\r\n                value={this.state.GBP}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button> Sign up </button>\r\n        </form>\r\n        {this.state.message && <p> {this.state.message} </p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default JoinIn;\r\n","import React, { Component } from \"react\";\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    pass: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      email: \"\",\r\n      pass: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"LogIn\">\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"email\">\r\n              <span>Email:</span>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_log\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <label htmlFor=\"password\">\r\n              <span>Password:</span>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_log\"\r\n                name=\"pass\"\r\n                value={this.state.pass}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() =>\r\n              this.props.changePermission(this.state.email, this.state.pass)\r\n            }\r\n          >\r\n            Log in\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LogIn;\r\n","import React from \"react\";\r\nimport JoinIn from \"../components/JoinIn\";\r\nimport LogIn from \"../components/LogIn\";\r\nimport \"./LogInPage.scss\";\r\n\r\nconst LogInPage = props => {\r\n  return (\r\n    <div className=\"LogInPage\">\r\n      <JoinIn></JoinIn>\r\n      <LogIn changePermission={props.changePermission}></LogIn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n","import React from \"react\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <h1>Exchange</h1>\r\n      <p>\r\n        Logged in as <span>{props.userData.username}</span>\r\n        <span onClick={props.logOut}>\r\n          <i className=\"fas fa-door-open\"></i>\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nconst CurrenciesItem = props => {\r\n  const { id, code, unit, sellPrice } = props.item;\r\n\r\n  return (\r\n    <div className=\"currenciesItem row\">\r\n      <span>{code}</span>\r\n      <span>{unit}</span>\r\n      <span>{sellPrice}</span>\r\n      <span>\r\n        <button onClick={() => props.exchangeAction(id, \"Buy\")}>Buy</button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrenciesItem;\r\n","import React from \"react\";\r\nimport CurrenciesItem from \"./CurrenciesItem\";\r\n\r\nconst Currencies = props => {\r\n  props.items[0].id = 0;\r\n  props.items[1].id = 1;\r\n  props.items[2].id = 2;\r\n  props.items[3].id = 3;\r\n  props.items[4].id = 4;\r\n  props.items[5].id = 5;\r\n\r\n  const currenciesList = props.items.map(item => (\r\n    <CurrenciesItem\r\n      key={item.code}\r\n      item={item}\r\n      exchangeAction={props.exchangeAction}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"currencies\">\r\n      <h2>Currencies</h2>\r\n      <div className=\"row\">\r\n        <span>Currency</span>\r\n        <span>Unit</span>\r\n        <span>Value</span>\r\n        <span>Actions</span>\r\n      </div>\r\n      {currenciesList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currencies;\r\n","import React from \"react\";\r\n\r\nconst WalletItem = props => {\r\n  const { id, code, unit, amount, purchasePrice } = props.item;\r\n  const value = ((amount * purchasePrice) / unit).toFixed(2);\r\n  return (\r\n    <div className=\"walletItem row\">\r\n      <span>{code}</span>\r\n      <span>{unit}</span>\r\n      <span>{purchasePrice}</span>\r\n      <span>{amount}</span>\r\n      <span>{value}</span>\r\n      <span>\r\n        <button onClick={() => props.exchangeAction(id, \"Sell\")}>Sell</button>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletItem;\r\n","import React from \"react\";\r\nimport WalletItem from \"./WalletItem\";\r\n\r\nconst Wallet = props => {\r\n  props.items[0].amount = props.userData.USD;\r\n  props.items[1].amount = props.userData.EUR;\r\n  props.items[2].amount = props.userData.CHF;\r\n  props.items[3].amount = props.userData.RUB;\r\n  props.items[4].amount = props.userData.CZK;\r\n  props.items[5].amount = props.userData.GBP;\r\n\r\n  props.items[0].id = 0;\r\n  props.items[1].id = 1;\r\n  props.items[2].id = 2;\r\n  props.items[3].id = 3;\r\n  props.items[4].id = 4;\r\n  props.items[5].id = 5;\r\n\r\n  const currenciesList = props.items.map((item, index) => (\r\n    <WalletItem key={index} item={item} exchangeAction={props.exchangeAction} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"wallet\">\r\n      <h2>Wallet</h2>\r\n      <div className=\"row\">\r\n        <span>Currency</span>\r\n        <span>Unit</span>\r\n        <span>Unit price</span>\r\n        <span>Amount</span>\r\n        <span>Value</span>\r\n        <span>Actions</span>\r\n      </div>\r\n      {currenciesList}\r\n      <div>\r\n        <p>\r\n          Available PLN: <p>{props.userData.PLN}</p>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import React, { Component } from \"react\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Currencies from \"../components/Currencies\";\r\nimport Wallet from \"../components/Wallet\";\r\nimport \"./MainPage.scss\";\r\n\r\nclass MainPage extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MainPage\">\r\n        <Navigation\r\n          userData={this.props.userData}\r\n          currenciesData={this.props.currenciesData}\r\n          logOut={this.props.logOut}\r\n        ></Navigation>\r\n        <main>\r\n          {Object.keys(this.props.currenciesData).length == 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Currencies\r\n              items={this.props.currenciesData.items}\r\n              exchangeAction={this.props.exchangeAction}\r\n            ></Currencies>\r\n          )}\r\n          {Object.keys(this.props.currenciesData).length == 0 ? (\r\n            \"\"\r\n          ) : (\r\n            <Wallet\r\n              items={this.props.currenciesData.items}\r\n              userData={this.props.userData}\r\n              exchangeAction={this.props.exchangeAction}\r\n            ></Wallet>\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./Popup.scss\";\r\nclass Popup extends Component {\r\n  state = {\r\n    amount: \"\",\r\n    value: 0,\r\n    code: \"\"\r\n  };\r\n\r\n  handleChange = e => {\r\n    const {\r\n      unit,\r\n      sellPrice,\r\n      purchasePrice,\r\n      code\r\n    } = this.props.currenciesData.items[this.props.userAction.index];\r\n    let amount = e.target.value;\r\n    amount = Math.abs(Math.floor(amount));\r\n    let value = \"\";\r\n    if (this.props.userAction.action == \"Buy\") {\r\n      value = ((amount * sellPrice) / unit).toFixed(2);\r\n    } else if (this.props.userAction.action == \"Sell\") {\r\n      value = ((amount * purchasePrice) / unit).toFixed(2);\r\n    }\r\n\r\n    this.setState({\r\n      amount,\r\n      value,\r\n      code\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.exchange(this.state.value, this.state.code, this.state.amount);\r\n    this.props.closePopup();\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      unit,\r\n      sellPrice,\r\n      purchasePrice,\r\n      code\r\n    } = this.props.currenciesData.items[this.props.userAction.index];\r\n    let value = \"\";\r\n    if (this.props.userAction.action == \"Buy\") {\r\n      value = ((this.state.amount * sellPrice) / unit).toFixed(2);\r\n    } else {\r\n      value = ((this.state.amount * purchasePrice) / unit).toFixed(2);\r\n    }\r\n    return (\r\n      <div className=\"overlay\">\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <div className=\"popup\">\r\n            <label htmlFor=\"currency\">\r\n              <p>{this.props.userAction.action}: </p>\r\n              <input\r\n                type=\"number\"\r\n                name=\"currency\"\r\n                value={this.state.amount}\r\n                onChange={this.handleChange}\r\n              />\r\n            </label>\r\n            <p>{code} </p>\r\n            for <span>{this.state.value} PLN</span>\r\n            <button className=\"confirm\">Confirm</button>\r\n            <button className=\"close\" onClick={this.props.closePopup}>\r\n              x\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport LogInPage from \"./pages/LogInPage\";\nimport MainPage from \"./pages/MainPage\";\nimport Popup from \"./components/Popup\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    permission: false,\n    currenciesData: {},\n    popupVisible: false,\n    userAction: {\n      index: \"\",\n      action: \"\"\n    },\n    userData: {}\n  };\n\n  async getCurrencies() {\n    setInterval(async () => {\n      const response = await fetch(\"/currencies\");\n      const json = await response.json();\n      this.setState({\n        currenciesData: json\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    this.getCurrencies();\n    console.log(this.state.currenciesData);\n  }\n\n  changePermission = async (email, password) => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    };\n    const response = await fetch(\"/users\", options);\n    const data = await response.json();\n    if (data && Object.keys(data).length > 0) {\n      this.setState({\n        permission: true,\n        userData: data\n      });\n    }\n  };\n\n  exchangeAction = (index, action) => {\n    this.setState({\n      popupVisible: true,\n      userAction: {\n        index,\n        action\n      }\n    });\n  };\n\n  closePopup = () => {\n    this.setState({\n      popupVisible: false\n    });\n  };\n\n  exchange = (value, code, amount) => {\n    if (\n      this.state.userAction.action == \"Buy\" &&\n      value <= this.state.userData.PLN\n    ) {\n      this.setState(prevState => ({\n        userData: {\n          ...prevState.userData,\n          PLN: Number(prevState.userData.PLN) - Number(value),\n          [code]: Number(prevState.userData[code]) + Number(amount)\n        }\n      }));\n    } else if (\n      this.state.userAction.action == \"Sell\" &&\n      amount <= this.state.userData[code]\n    ) {\n      this.setState(prevState => ({\n        userData: {\n          ...prevState.userData,\n          PLN: Number(prevState.userData.PLN) + Number(value),\n          [code]: Number(prevState.userData[code]) - Number(amount)\n        }\n      }));\n    } else {\n      alert(\"You don't have enough funds\");\n    }\n  };\n\n  logOut = async () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...this.state.userData\n      })\n    };\n    const response = await fetch(\"/userData\", options);\n    const data = await response.json();\n    this.setState({\n      permission: false\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Router>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={props => (\n                <LogInPage\n                  {...props}\n                  changePermission={this.changePermission}\n                />\n              )}\n            />\n            <Route\n              path=\"/mainPage\"\n              render={props => (\n                <MainPage\n                  {...props}\n                  userData={this.state.userData}\n                  currenciesData={this.state.currenciesData}\n                  exchangeAction={this.exchangeAction}\n                  logOut={this.logOut}\n                />\n              )}\n            />\n          </Switch>\n          <Route\n            render={() =>\n              this.state.permission ? (\n                <Redirect to=\"/mainPage\" />\n              ) : (\n                <Redirect to=\"/\" />\n              )\n            }\n          />\n        </Router>\n        {this.state.popupVisible ? (\n          <Popup\n            userData={this.state.userData}\n            currenciesData={this.state.currenciesData}\n            userAction={this.state.userAction}\n            closePopup={this.closePopup}\n            exchange={this.exchange}\n          ></Popup>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}